.Button {
  flex-direction: column;
  @extend %align-center;

  &--spacing {
    margin: 0 $spacing * 2;

    &:first-child {
      margin-left: 0;
    }

    &:last-child {
      margin-right: 0;
    }
  }

  // default values
  &-label {
    margin-bottom: $spacing;
    @extend %direction-row;

    &-text {
      letter-spacing: 0;
      color: $primary-color;
    }
  }
  &-adornment {
    @extend %align-center;

    &-ring {
      @extend %ring-border;
      @include transition(border-color, width);

      &-icon {
        stroke: $primary-color;
      }
    }
    &-bar {
      @extend %bar-border;
      @include transition(background-color, width);
    }
  }

  // large type values
  &-large {
    .Button-adornment {
      &-ring {
        @include area($button-adornment--xy * 2);
        border-radius: $button-adornment--xy;
      }
      &-bar {
        width: $spacing * 6;
      }
    }
    &:hover {
      .Button-adornment {
        &-ring {
          width: $button-adornment--xy * 4;
        }
        &-bar {
          width: $spacing * 2;
        }
      }
    }
  }

  // normal type values
  &-normal {
    .Button-adornment {
      &-ring {
        @include area($button-adornment--xy);
        border-radius: $button-adornment--xy / 2;
      }
      &-bar {
        width: $spacing * 8;
      }
    }
    &:hover {
      .Button-adornment {
        &-ring {
          width: $button-adornment--xy * 4;
        }
        &-bar {
          width: $spacing * 2;
        }
      }
    }
  }

  // small type values
  &-small {
    .Button-label {
      @extend %align-center;
      align-self: flex-start;
      margin-bottom: 0;
      &-text {
        color: $tertiary-color--light;
      }
      &-icon {
        fill: $tertiary-color;
        stroke: transparent;
        margin-right: $spacing;
      }
    }
    .Button-adornment {
      &-ring {
        @include area($button-adornment--xy / 2);
        border-radius: $button-adornment--xy / 2;
        &-icon {
          &--small {
            @include area($spacing * 1.1);
            fill: $tertiary-color;
            stroke: transparent;
            margin-bottom: $spacing / 8;
            margin-left: $spacing / 8;
          }
        }
      }
      &-bar--left {
        width: $spacing * 18;
      }
    }
  }

  &:hover {
    .Button-label {
      &-icon {
        fill: $tertiary-color--light;
      }
    }
    .Button-adornment {
      &-ring {
        @extend %ring-border--hover;
        &-icon {
          &--small {
            fill: $primary-color;
          }
        }
      }
      &-bar {
        @extend %bar-border--hover;
      }
    }
  }
}
